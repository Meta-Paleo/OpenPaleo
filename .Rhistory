dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/Citation analysis/Palaeontologia Electronica/PE_OAprop.png',
width=1000,height=600)
barplot(prop.table(table(PE_OA)),main="Palaeontologia Electronica, OA proportion")
dev.off()
############## Palaeontology
Palaeontology_scopus<-read.csv("C:/Users/PC/Documents/GitHub/OpenPaleo/Journal data/Palaeontology/Palaeontology_Scopus.csv")
Palaeontology_unpaywall<-read.csv("C:/Users/PC/Documents/GitHub/OpenPaleo/Journal data/Palaeontology/Palaeontology_Unpaywall.csv")
# Create a new factor for OA status
Palaeontology_OA<-Palaeontology_unpaywall[,"is_oa"]
Palaeontology_DOI<-Palaeontology_scopus[,"DOI"]
# Pull out citation counts, and replace NAs with zero counts
Palaeontology_cite<-Palaeontology_scopus[,"Cited.by"]
Palaeontology_cite[is.na(Palaeontology_cite)]<-0
# Histogram plot
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/Citation analysis/Palaeontology/Palaeontology_citefreq.png',
width=1000,height=600)
Palaeontology_hist<-hist(Palaeontology_cite,col="red",xlab="Citation count",
main="Palaeontology",breaks=20)
# Add a normal distribution curve
xfit<-seq(min(Palaeontology_cite),max(Palaeontology_cite),length=100)
yfit<-dnorm(xfit,mean=mean(Palaeontology_cite),sd=sd(Palaeontology_cite))
yfit <- yfit*diff(Palaeontology_hist$mids[1:2])*length(Palaeontology_cite)
lines(xfit,yfit,col="blue",lwd=2)
abline(v=2.578,col="blue",lwd=2,lty=2) # 2016 JIF
dev.off()
# Try a density plot instead
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/Citation analysis/Palaeontology/Palaeontology_citedensity.png',
width=1000,height=600)
plot(density(Palaeontology_cite),xlab="Citation count",
main="Palaeontology")
polygon((density(Palaeontology_cite)),col = "red")
abline(v=2.578,col="blue",lwd=2,lty=2) # 2016 JIF
dev.off()
# SuPalaeontologyarise how many articles are OA and how many are not
summary(Palaeontology_OA)
# Plot as a proportional barplot
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/OA analysis/Palaeontology/Palaeontology_OAprop.png',
width=1000,height=600)
barplot(prop.table(table(Palaeontology_OA)),main="Palaeontology, OA proportion")
dev.off()
############## Palaeontology
Palaeontology_scopus<-read.csv("C:/Users/PC/Documents/GitHub/OpenPaleo/Journal data/Palaeontology/Palaeontology_Scopus.csv")
Palaeontology_unpaywall<-read.csv("C:/Users/PC/Documents/GitHub/OpenPaleo/Journal data/Palaeontology/Palaeontology_Unpaywall.csv")
# Create a new factor for OA status
Palaeontology_OA<-Palaeontology_unpaywall[,"is_oa"]
Palaeontology_DOI<-Palaeontology_scopus[,"DOI"]
# Pull out citation counts, and replace NAs with zero counts
Palaeontology_cite<-Palaeontology_scopus[,"Cited.by"]
Palaeontology_cite[is.na(Palaeontology_cite)]<-0
# Histogram plot
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/Citation analysis/Palaeontology/Palaeontology_citefreq.png',
width=1000,height=600)
Palaeontology_hist<-hist(Palaeontology_cite,col="red",xlab="Citation count",
main="Palaeontology",breaks=20)
# Add a normal distribution curve
xfit<-seq(min(Palaeontology_cite),max(Palaeontology_cite),length=100)
yfit<-dnorm(xfit,mean=mean(Palaeontology_cite),sd=sd(Palaeontology_cite))
yfit <- yfit*diff(Palaeontology_hist$mids[1:2])*length(Palaeontology_cite)
lines(xfit,yfit,col="blue",lwd=2)
abline(v=2.578,col="blue",lwd=2,lty=2) # 2016 JIF
dev.off()
# Try a density plot instead
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/Citation analysis/Palaeontology/Palaeontology_citedensity.png',
width=1000,height=600)
plot(density(Palaeontology_cite),xlab="Citation count",
main="Palaeontology")
polygon((density(Palaeontology_cite)),col = "red")
abline(v=2.578,col="blue",lwd=2,lty=2) # 2016 JIF
dev.off()
# SuPalaeontologyarise how many articles are OA and how many are not
summary(Palaeontology_OA)
# Plot as a proportional barplot
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/OA analysis/Palaeontology/Palaeontology_OAprop.png',
width=1000,height=600)
barplot(prop.table(table(Palaeontology_OA)),main="Palaeontology, OA proportion")
dev.off()
############## Palaeontology
Palaeontology_scopus<-read.csv("C:/Users/PC/Documents/GitHub/OpenPaleo/Journal data/Palaeontology/Palaeontology_Scopus.csv")
Palaeontology_unpaywall<-read.csv("C:/Users/PC/Documents/GitHub/OpenPaleo/Journal data/Palaeontology/Palaeontology_Unpaywall.csv")
# Create a new factor for OA status
Palaeontology_OA<-Palaeontology_unpaywall[,"is_oa"]
Palaeontology_DOI<-Palaeontology_scopus[,"DOI"]
# Pull out citation counts, and replace NAs with zero counts
Palaeontology_cite<-Palaeontology_scopus[,"Cited.by"]
Palaeontology_cite[is.na(Palaeontology_cite)]<-0
# Histogram plot
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/Citation analysis/Palaeontology/Palaeontology_citefreq.png',
width=1000,height=600)
Palaeontology_hist<-hist(Palaeontology_cite,col="red",xlab="Citation count",
main="Palaeontology",breaks=20)
# Add a normal distribution curve
xfit<-seq(min(Palaeontology_cite),max(Palaeontology_cite),length=100)
yfit<-dnorm(xfit,mean=mean(Palaeontology_cite),sd=sd(Palaeontology_cite))
yfit <- yfit*diff(Palaeontology_hist$mids[1:2])*length(Palaeontology_cite)
lines(xfit,yfit,col="blue",lwd=2)
abline(v=2.578,col="blue",lwd=2,lty=2) # 2016 JIF
dev.off()
# Try a density plot instead
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/Citation analysis/Palaeontology/Palaeontology_citedensity.png',
width=1000,height=600)
plot(density(Palaeontology_cite),xlab="Citation count",
main="Palaeontology")
polygon((density(Palaeontology_cite)),col = "red")
abline(v=2.578,col="blue",lwd=2,lty=2) # 2016 JIF
dev.off()
# SuPalaeontologyarise how many articles are OA and how many are not
summary(Palaeontology_OA)
# Plot as a proportional barplot
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/OA analysis/Palaeontology/Palaeontology_OAprop.png',
width=1000,height=600)
barplot(prop.table(table(Palaeontology_OA)),main="Palaeontology, OA proportion")
dev.off()
Palaeontology_scopus<-read.csv("C:/Users/PC/Documents/GitHub/OpenPaleo/Journal data/Palaeontology/Palaeontology_Scopus.csv")
Palaeontology_unpaywall<-read.csv("C:/Users/PC/Documents/GitHub/OpenPaleo/Journal data/Palaeontology/Palaeontology_Unpaywall.csv")
# Create a new factor for OA status
Palaeontology_OA<-Palaeontology_unpaywall[,"is_oa"]
Palaeontology_DOI<-Palaeontology_scopus[,"DOI"]
# Pull out citation counts, and replace NAs with zero counts
Palaeontology_cite<-Palaeontology_scopus[,"Cited.by"]
Palaeontology_cite[is.na(Palaeontology_cite)]<-0
# Histogram plot
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/Citation analysis/Palaeontology/Palaeontology_citefreq.png',
width=1000,height=600)
Palaeontology_hist<-hist(Palaeontology_cite,col="red",xlab="Citation count",
main="Palaeontology",breaks=20)
# Add a normal distribution curve
xfit<-seq(min(Palaeontology_cite),max(Palaeontology_cite),length=100)
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/Citation analysis/Palaeontology/Palaeontology_citedensity.png',
width=1000,height=600)
plot(density(Palaeontology_cite),xlab="Citation count",
main="Palaeontology")
polygon((density(Palaeontology_cite)),col = "red")
abline(v=3.132,col="blue",lwd=2,lty=2) # 2016 JIF
dev.off()
# Histogram plot
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/Citation analysis/Palaeontology/Palaeontology_citefreq.png',
width=1000,height=600)
Palaeontology_hist<-hist(Palaeontology_cite,col="red",xlab="Citation count",
main="Palaeontology",breaks=20)
# Add a normal distribution curve
xfit<-seq(min(Palaeontology_cite),max(Palaeontology_cite),length=100)
yfit<-dnorm(xfit,mean=mean(Palaeontology_cite),sd=sd(Palaeontology_cite))
yfit <- yfit*diff(Palaeontology_hist$mids[1:2])*length(Palaeontology_cite)
lines(xfit,yfit,col="blue",lwd=2)
abline(v=3.132,col="blue",lwd=2,lty=2) # 2016 JIF
dev.off()
# SuPalaeontologyarise how many articles are OA and how many are not
summary(Palaeontology_OA)
# Plot as a proportional barplot
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/OA analysis/Palaeontology/Palaeontology_OAprop.png',
width=1000,height=600)
barplot(prop.table(table(Palaeontology_OA)),main="Palaeontology, OA proportion")
dev.off()
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/Citation analysis/Comptes Rendus Palevol/CRP_citedensity.png',
width=1000,height=600)
plot(density(CRP_cite),xlab="Citation count",
main="Comptes Rendus Palevol")
polygon((density(CRP_cite)),col = "red")
abline(v=1.376,col="blue",lwd=2,lty=2) # 2016 JIF
dev.off()
# Histogram plot
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/Citation analysis/Comptes Rendus Palevol/CRP_citefreq.png',
width=1000,height=600)
CRP_hist<-hist(CRP_cite,col="red",xlab="Citation count",
main="Comptes Rendus Palevol",breaks=20)
# Add a normal distribution curve
xfit<-seq(min(CRP_cite),max(CRP_cite),length=100)
yfit<-dnorm(xfit,mean=mean(CRP_cite),sd=sd(CRP_cite))
yfit <- yfit*diff(CRP_hist$mids[1:2])*length(CRP_cite)
lines(xfit,yfit,col="blue",lwd=2)
abline(v=1.376,col="blue",lwd=2,lty=2) # 2016 JIF
dev.off()
Palaios_scopus<-read.csv("C:/Users/PC/Documents/GitHub/OpenPaleo/Journal data/Palaios/Palaios_Scopus.csv")
Palaios_unpaywall<-read.csv("C:/Users/PC/Documents/GitHub/OpenPaleo/Journal data/Palaios/Palaios_Unpaywall.csv")
# Create a new factor for OA status
Palaios_OA<-Palaios_unpaywall[,"is_oa"]
Palaios_DOI<-Palaios_scopus[,"DOI"]
# Pull out citation counts, and replace NAs with zero counts
Palaios_cite<-Palaios_scopus[,"Cited.by"]
Palaios_cite[is.na(Palaios_cite)]<-0
# Histogram plot
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/Citation analysis/Palaios/Palaios_citefreq.png',
width=1000,height=600)
Palaios_hist<-hist(Palaios_cite,col="red",xlab="Citation count",
main="Palaios",breaks=20)
# Add a normal distribution curve
xfit<-seq(min(Palaios_cite),max(Palaios_cite),length=100)
yfit<-dnorm(xfit,mean=mean(Palaios_cite),sd=sd(Palaios_cite))
yfit <- yfit*diff(Palaios_hist$mids[1:2])*length(Palaios_cite)
lines(xfit,yfit,col="blue",lwd=2)
abline(v=1.983,col="blue",lwd=2,lty=2) # 2016 JIF
dev.off()
# Try a density plot instead
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/Citation analysis/Palaios/Palaios_citedensity.png',
width=1000,height=600)
plot(density(Palaios_cite),xlab="Citation count",
main="Palaios")
polygon((density(Palaios_cite)),col = "red")
abline(v=1.983,col="blue",lwd=2,lty=2) # 2016 JIF
dev.off()
# SuPalaiosarise how many articles are OA and how many are not
summary(Palaios_OA)
# Plot as a proportional barplot
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/OA analysis/Palaios/Palaios_OAprop.png',
width=1000,height=600)
barplot(prop.table(table(Palaios_OA)),main="Palaios, OA proportion")
dev.off()
Palaios_scopus<-read.csv("C:/Users/PC/Documents/GitHub/OpenPaleo/Journal data/Palaios/Palaios_Scopus.csv")
Palaios_unpaywall<-read.csv("C:/Users/PC/Documents/GitHub/OpenPaleo/Journal data/Palaios/Palaios_Unpaywall.csv")
# Create a new factor for OA status
Palaios_OA<-Palaios_unpaywall[,"is_oa"]
Palaios_DOI<-Palaios_scopus[,"DOI"]
# Pull out citation counts, and replace NAs with zero counts
Palaios_cite<-Palaios_scopus[,"Cited.by"]
Palaios_cite[is.na(Palaios_cite)]<-0
# Histogram plot
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/Citation analysis/Palaios/Palaios_citefreq.png',
width=1000,height=600)
Palaios_hist<-hist(Palaios_cite,col="red",xlab="Citation count",
main="Palaios",breaks=20)
# Add a normal distribution curve
xfit<-seq(min(Palaios_cite),max(Palaios_cite),length=100)
yfit<-dnorm(xfit,mean=mean(Palaios_cite),sd=sd(Palaios_cite))
yfit <- yfit*diff(Palaios_hist$mids[1:2])*length(Palaios_cite)
lines(xfit,yfit,col="blue",lwd=2)
abline(v=1.983,col="blue",lwd=2,lty=2) # 2016 JIF
dev.off()
# Try a density plot instead
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/Citation analysis/Palaios/Palaios_citedensity.png',
width=1000,height=600)
plot(density(Palaios_cite),xlab="Citation count",
main="Palaios")
polygon((density(Palaios_cite)),col = "red")
abline(v=1.983,col="blue",lwd=2,lty=2) # 2016 JIF
dev.off()
# SuPalaiosarise how many articles are OA and how many are not
summary(Palaios_OA)
# Plot as a proportional barplot
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/OA analysis/Palaios/Palaios_OAprop.png',
width=1000,height=600)
barplot(prop.table(table(Palaios_OA)),main="Palaios, OA proportion")
dev.off()
PZ_scopus<-read.csv("C:/Users/PC/Documents/GitHub/OpenPaleo/Journal data/Paläontologische Zeitschrift/PaläontologischeZeitschrift_Scopus.csv")
PZ_unpaywall<-read.csv("C:/Users/PC/Documents/GitHub/OpenPaleo/Journal data/Paläontologische Zeitschrift/PaläontologischeZeitschrift_Unpaywall.csv")
# Create a new factor for OA status
PZ_OA<-PZ_unpaywall[,"is_oa"]
PZ_DOI<-PZ_scopus[,"DOI"]
# Pull out citation counts, and replace NAs with zero counts
PZ_cite<-PZ_scopus[,"Cited.by"]
PZ_cite[is.na(PZ_cite)]<-0
# Histogram plot
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/Citation analysis/Paläontologische Zeitschrift/PaläontologischeZeitschrift_citefreq.png',
width=1000,height=600)
PZ_hist<-hist(PZ_cite,col="red",xlab="Citation count",
main="Paläontologische Zeitschrift",breaks=20)
# Add a normal distribution curve
xfit<-seq(min(PZ_cite),max(PZ_cite),length=100)
yfit<-dnorm(xfit,mean=mean(PZ_cite),sd=sd(PZ_cite))
yfit <- yfit*diff(PZ_hist$mids[1:2])*length(PZ_cite)
lines(xfit,yfit,col="blue",lwd=2)
abline(v=1.095,col="blue",lwd=2,lty=2) # 2016 JIF
dev.off()
# Try a density plot instead
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/Citation analysis/Paläontologische Zeitschrift/PaläontologischeZeitschrift_citedensity.png',
width=1000,height=600)
plot(density(PZ_cite),xlab="Citation count",
main="PZ")
polygon((density(PZ_cite)),col = "red")
abline(v=1.095,col="blue",lwd=2,lty=2) # 2016 JIF
dev.off()
# SuPZarise how many articles are OA and how many are not
summary(PZ_OA)
# Plot as a proportional barplot
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/OA analysis/Paläontologische Zeitschrift/Paläontologische Zeitschrift_OAprop.png',
width=1000,height=600)
barplot(prop.table(table(PZ_OA)),main="Paläontologische Zeitschrift, OA proportion")
dev.off()
PZ_scopus<-read.csv("C:/Users/PC/Documents/GitHub/OpenPaleo/Journal data/Paläontologische Zeitschrift/PaläontologischeZeitschrift_Scopus.csv")
PZ_unpaywall<-read.csv("C:/Users/PC/Documents/GitHub/OpenPaleo/Journal data/Paläontologische Zeitschrift/PaläontologischeZeitschrift_Unpaywall.csv")
# Create a new factor for OA status
PZ_OA<-PZ_unpaywall[,"is_oa"]
PZ_DOI<-PZ_scopus[,"DOI"]
# Pull out citation counts, and replace NAs with zero counts
PZ_cite<-PZ_scopus[,"Cited.by"]
PZ_cite[is.na(PZ_cite)]<-0
# Histogram plot
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/Citation analysis/Paläontologische Zeitschrift/PaläontologischeZeitschrift_citefreq.png',
width=1000,height=600)
PZ_hist<-hist(PZ_cite,col="red",xlab="Citation count",
main="Paläontologische Zeitschrift",breaks=20)
# Add a normal distribution curve
xfit<-seq(min(PZ_cite),max(PZ_cite),length=100)
yfit<-dnorm(xfit,mean=mean(PZ_cite),sd=sd(PZ_cite))
yfit <- yfit*diff(PZ_hist$mids[1:2])*length(PZ_cite)
lines(xfit,yfit,col="blue",lwd=2)
abline(v=1.095,col="blue",lwd=2,lty=2) # 2016 JIF
dev.off()
# Try a density plot instead
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/Citation analysis/Paläontologische Zeitschrift/PaläontologischeZeitschrift_citedensity.png',
width=1000,height=600)
plot(density(PZ_cite),xlab="Citation count",
main="PZ")
polygon((density(PZ_cite)),col = "red")
abline(v=1.095,col="blue",lwd=2,lty=2) # 2016 JIF
dev.off()
# SuPZarise how many articles are OA and how many are not
summary(PZ_OA)
# Plot as a proportional barplot
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/OA analysis/Paläontologische Zeitschrift/Paläontologische Zeitschrift_OAprop.png',
width=1000,height=600)
barplot(prop.table(table(PZ_OA)),main="Paläontologische Zeitschrift, OA proportion")
dev.off()
############## Paleobiology
Paleobiology_scopus<-read.csv("C:/Users/PC/Documents/GitHub/OpenPaleo/Journal data/Paleobiology/PaläontologischeZeitschrift_Scopus.csv")
Paleobiology_unpaywall<-read.csv("C:/Users/PC/Documents/GitHub/OpenPaleo/Journal data/Paleobiology/PaläontologischeZeitschrift_Unpaywall.csv")
# Create a new factor for OA status
Paleobiology_OA<-Paleobiology_unpaywall[,"is_oa"]
Paleobiology_DOI<-Paleobiology_scopus[,"DOI"]
# Pull out citation counts, and replace NAs with zero counts
Paleobiology_cite<-Paleobiology_scopus[,"Cited.by"]
Paleobiology_cite[is.na(Paleobiology_cite)]<-0
# Histogram plot
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/Citation analysis/Paleobiology/PaläontologischeZeitschrift_citefreq.png',
width=1000,height=600)
Paleobiology_hist<-hist(Paleobiology_cite,col="red",xlab="Citation count",
main="Paleobiology",breaks=20)
# Add a normal distribution curve
xfit<-seq(min(Paleobiology_cite),max(Paleobiology_cite),length=100)
yfit<-dnorm(xfit,mean=mean(Paleobiology_cite),sd=sd(Paleobiology_cite))
yfit <- yfit*diff(Paleobiology_hist$mids[1:2])*length(Paleobiology_cite)
lines(xfit,yfit,col="blue",lwd=2)
abline(v=1.095,col="blue",lwd=2,lty=2) # 2016 JIF
dev.off()
# Try a density plot instead
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/Citation analysis/Paleobiology/PaläontologischeZeitschrift_citedensity.png',
width=1000,height=600)
plot(density(Paleobiology_cite),xlab="Citation count",
main="Paleobiology")
polygon((density(Paleobiology_cite)),col = "red")
abline(v=1.095,col="blue",lwd=2,lty=2) # 2016 JIF
dev.off()
# SuPaleobiologyarise how many articles are OA and how many are not
summary(Paleobiology_OA)
# Plot as a proportional barplot
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/OA analysis/Paleobiology/Paleobiology_OAprop.png',
width=1000,height=600)
barplot(prop.table(table(Paleobiology_OA)),main="Paleobiology, OA proportion")
dev.off()
####### Paleobiology
Paleobiology_scopus<-read.csv("C:/Users/PC/Documents/GitHub/OpenPaleo/Journal data/Paleobiology/Paleobiology_Scopus.csv")
Paleobiology_unpaywall<-read.csv("C:/Users/PC/Documents/GitHub/OpenPaleo/Journal data/Paleobiology/Paleobiology_Unpaywall.csv")
# Create a new factor for OA status
Paleobiology_OA<-Paleobiology_unpaywall[,"is_oa"]
Paleobiology_DOI<-Paleobiology_scopus[,"DOI"]
# Pull out citation counts, and replace NAs with zero counts
Paleobiology_cite<-Paleobiology_scopus[,"Cited.by"]
Paleobiology_cite[is.na(Paleobiology_cite)]<-0
# Histogram plot
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/Citation analysis/Paleobiology/Paleobiology_citefreq.png',
width=1000,height=600)
Paleobiology_hist<-hist(Paleobiology_cite,col="red",xlab="Citation count",
main="Paleobiology",breaks=20)
# Add a normal distribution curve
xfit<-seq(min(Paleobiology_cite),max(Paleobiology_cite),length=100)
yfit<-dnorm(xfit,mean=mean(Paleobiology_cite),sd=sd(Paleobiology_cite))
yfit <- yfit*diff(Paleobiology_hist$mids[1:2])*length(Paleobiology_cite)
lines(xfit,yfit,col="blue",lwd=2)
abline(v=1.095,col="blue",lwd=2,lty=2) # 2016 JIF
dev.off()
# Try a density plot instead
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/Citation analysis/Paleobiology/Paleobiology_citedensity.png',
width=1000,height=600)
plot(density(Paleobiology_cite),xlab="Citation count",
main="Paleobiology")
polygon((density(Paleobiology_cite)),col = "red")
abline(v=1.095,col="blue",lwd=2,lty=2) # 2016 JIF
dev.off()
# SuPaleobiologyarise how many articles are OA and how many are not
summary(Paleobiology_OA)
# Plot as a proportional barplot
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/OA analysis/Paleobiology/Paleobiology_OAprop.png',
width=1000,height=600)
barplot(prop.table(table(Paleobiology_OA)),main="Paleobiology, OA proportion")
dev.off()
RPP_scopus<-read.csv("C:/Users/PC/Documents/GitHub/OpenPaleo/Journal data/Review of Palaeobotany and Palynology/ReviewofPalaeobotanyandPalynology_Scopus.csv")
RPP_unpaywall<-read.csv("C:/Users/PC/Documents/GitHub/OpenPaleo/Journal data/Review of Palaeobotany and Palynology/ReviewofPalaeobotanyandPalynology_Unpaywall.csv")
# Create a new factor for OA status
RPP_OA<-RPP_unpaywall[,"is_oa"]
RPP_DOI<-RPP_scopus[,"DOI"]
# Pull out citation counts, and replace NAs with zero counts
RPP_cite<-RPP_scopus[,"Cited.by"]
RPP_cite[is.na(RPP_cite)]<-0
# Histogram plot
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/Citation analysis/Review of Palaeobotany and Palynology/ReviewofPalaeobotanyandPalynology_citefreq.png',
width=1000,height=600)
RPP_hist<-hist(RPP_cite,col="red",xlab="Citation count",
main="Review of Palaeobotany and Palynology",breaks=20)
# Add a normal distribution curve
xfit<-seq(min(RPP_cite),max(RPP_cite),length=100)
yfit<-dnorm(xfit,mean=mean(RPP_cite),sd=sd(RPP_cite))
yfit <- yfit*diff(RPP_hist$mids[1:2])*length(RPP_cite)
lines(xfit,yfit,col="blue",lwd=2)
abline(v=1.817,col="blue",lwd=2,lty=2) # 2016 JIF
dev.off()
# Try a density plot instead
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/Citation analysis/RPP/ReviewofPalaeobotanyandPalynology_citedensity.png',
width=1000,height=600)
plot(density(RPP_cite),xlab="Citation count",
main="Review of Palaeobotany and Palynology")
polygon((density(RPP_cite)),col = "red")
abline(v=1.817,col="blue",lwd=2,lty=2) # 2016 JIF
dev.off()
# SuRPParise how many articles are OA and how many are not
summary(RPP_OA)
# Plot as a proportional barplot
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/OA analysis/Review of Palaeobotany and Palynology/ReviewofPalaeobotanyandPalynology_OAprop.png',
width=1000,height=600)
barplot(prop.table(table(RPP_OA)),main="Review of Palaeobotany and Palynology, OA proportion")
dev.off()
# Try a density plot instead
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/Citation analysis/Review of Palaeobotany and Palynology/ReviewofPalaeobotanyandPalynology_citedensity.png',
width=1000,height=600)
plot(density(RPP_cite),xlab="Citation count",
main="Review of Palaeobotany and Palynology")
polygon((density(RPP_cite)),col = "red")
abline(v=1.817,col="blue",lwd=2,lty=2) # 2016 JIF
dev.off()
# SuRPParise how many articles are OA and how many are not
summary(RPP_OA)
# Plot as a proportional barplot
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/OA analysis/Review of Palaeobotany and Palynology/ReviewofPalaeobotanyandPalynology_OAprop.png',
width=1000,height=600)
barplot(prop.table(table(RPP_OA)),main="Review of Palaeobotany and Palynology, OA proportion")
dev.off()
RPP_scopus<-read.csv("C:/Users/PC/Documents/GitHub/OpenPaleo/Journal data/Review of Palaeobotany and Palynology/ReviewofPalaeobotanyandPalynology_Scopus.csv")
RPP_unpaywall<-read.csv("C:/Users/PC/Documents/GitHub/OpenPaleo/Journal data/Review of Palaeobotany and Palynology/ReviewofPalaeobotanyandPalynology_Unpaywall.csv")
# Create a new factor for OA status
RPP_OA<-RPP_unpaywall[,"is_oa"]
RPP_DOI<-RPP_scopus[,"DOI"]
# Pull out citation counts, and replace NAs with zero counts
RPP_cite<-RPP_scopus[,"Cited.by"]
RPP_cite[is.na(RPP_cite)]<-0
# Histogram plot
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/Citation analysis/Review of Palaeobotany and Palynology/RPP_citefreq.png',
width=1000,height=600)
RPP_hist<-hist(RPP_cite,col="red",xlab="Citation count",
main="Review of Palaeobotany and Palynology",breaks=20)
# Add a normal distribution curve
xfit<-seq(min(RPP_cite),max(RPP_cite),length=100)
yfit<-dnorm(xfit,mean=mean(RPP_cite),sd=sd(RPP_cite))
yfit <- yfit*diff(RPP_hist$mids[1:2])*length(RPP_cite)
lines(xfit,yfit,col="blue",lwd=2)
abline(v=1.817,col="blue",lwd=2,lty=2) # 2016 JIF
dev.off()
# Try a density plot instead
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/Citation analysis/Review of Palaeobotany and Palynology/RPP_citedensity.png',
width=1000,height=600)
plot(density(RPP_cite),xlab="Citation count",
main="Review of Palaeobotany and Palynology")
polygon((density(RPP_cite)),col = "red")
abline(v=1.817,col="blue",lwd=2,lty=2) # 2016 JIF
dev.off()
width=1000,height=600)
plot(density(RPP_cite),xlab="Citation count",
main="Review of Palaeobotany and Palynology")
polygon((density(RPP_cite)),col = "red")
abline(v=1.817,col="blue",lwd=2,lty=2) # 2016 JIF
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/Citation analysis/Review of Palaeobotany and Palynology/RPP_citedensity.png',
width=1000,height=600)
plot(density(RPP_cite),xlab="Citation count",
main="Review of Palaeobotany and Palynology")
polygon((density(RPP_cite)),col = "red")
abline(v=1.817,col="blue",lwd=2,lty=2) # 2016 JIF
dev.off()
dev.copy(png,'C:/Users/PC/Documents/GitHub/OpenPaleo/Results/OA analysis/Review of Palaeobotany and Palynology/RPP_OAprop.png',
width=1000,height=600)
barplot(prop.table(table(RPP_OA)),main="Review of Palaeobotany and Palynology, OA proportion")
dev.off()
install.packages("paleobioDB")
library(paleobioDB)
library(paleobioDB)
data<-pbdb_occurrences(limit="all",base_name="Dinosauria",interval="Mesozoic")
## Introduction
This is a markdown script for downloading and analysing fossil occurrence data from the [Paleobiology Database](https://paleobiodb.org/)
### A note on markdown format
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>. Some other good basics can be found here: <https://rmarkdown.rstudio.com/authoring_basics.html>.
## Installing the palebioDB package
Rather than using the downloader within the Paleobiology Database, let's try playing with the [paleobioDB](https://github.com/ropensci/paleobioDB) package for R.
Installation is simple from CRAN:
```{r}
install.packages("paleobioDB")
library(paleobioDB)
```
## Downloading fossil occurrences
We want to download raw fossil occurrence data from the Paleobiology Database. Let's go with dinosaurs for now, as the data for them are quite complete. And because dinosaurs are awesome.
For this, we'll set no limit on the number of occurrences, and constrain occurrences to the Mesozoic period.
```{r}
data<-pbdb_occurrences(limit="all",base_name="Dinosauria",interval="Mesozoic")
head(data)
```
### A cautionary note
If you use data like this without checking it beforehand, you're going to have a bad time. These data are not perfect, but a representation of the current state of the published research literature. Please make sure to critically evaluate the data before any subsequent analyses.
## Some quick plots of the data
This following code will return:
1. A map of the species occurrences distribution;
2. A map based on the sampling effort with the resolution based on the number of fossil occurrences per cell;
3.
```{r data, echo=FALSE}
pbdb_map(data)
pbdb_map_occur(data,res=5)
pbdb_map_richness(data, res=5, rank="species")
install.packages("paleobioDB")
